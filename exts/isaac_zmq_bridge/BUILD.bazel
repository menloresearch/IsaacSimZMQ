load("@rules_python//python:defs.bzl", "py_library", "py_binary")

# Requirements file for prebundling
filegroup(
    name = "requirements_lock_txt",
    srcs = ["requirements_lock.txt"],
    visibility = ["//visibility:public"],
)

# Copy py_proto files to core folder
genrule(
    name = "copy_client_stream_message_py_proto",
    srcs = [
        "//:client_stream_message_py_proto",
        "//:server_control_message_py_proto",
    ],
    outs = [
        "isaac_zmq_bridge/core/client_stream_message_pb2.py",
        "isaac_zmq_bridge/core/server_control_message_pb2.py",
    ],
    cmd = """
        set -e

        # Define the proto files we want to copy
        declare -A PROTO_FILES=(
            ["client_stream_message_pb2.py"]="$(location isaac_zmq_bridge/core/client_stream_message_pb2.py)"
            ["server_control_message_pb2.py"]="$(location isaac_zmq_bridge/core/server_control_message_pb2.py)"
        )

        # Find and copy each proto file
        for proto_name in "$${!PROTO_FILES[@]}"; do
            PROTO_FILE=""
            for src in $(SRCS); do
                if [[ "$$src" == *"$$proto_name" ]]; then
                    PROTO_FILE="$$src"
                    break
                fi
            done

            if [[ -z "$$PROTO_FILE" ]]; then
                echo "Error: $$proto_name not found in sources"
                exit 1
            fi

            # Copy the file to the output location
            cp "$$PROTO_FILE" "$${PROTO_FILES[$$proto_name]}"
            echo "Copied $$proto_name to exts/isaac_zmq_bridge/isaac_zmq_bridge/core/"
        done
    """,
    visibility = ["//visibility:public"],
)

# Prebundle pip packages target
genrule(
    name = "prebundle_pip_packages",
    srcs = [":requirements_lock_txt"],
    outs = ["pip_prebundle.tar"],
    cmd = """
        set -e

        # Get paths
        WORKSPACE_ROOT=$$(pwd)
        TEMP_DIR=$$(mktemp -d)

        OUTPUT_DIR="isaac_exts/exts/isaac_zmq_bridge/pip_prebundle"
        REQUIREMENTS_FILE="$(location //exts/isaac_zmq_bridge:requirements_lock_txt)"

        echo "Installing packages from $$REQUIREMENTS_FILE to $$OUTPUT_DIR"

        # Clean existing prebundle directory
        rm -rf "$$OUTPUT_DIR"
        mkdir -p "$$TEMP_DIR"
        mkdir -p "$$OUTPUT_DIR"

        # Normalize for filesystem and import
        normalize_name() {
            echo "$$1" | tr '[:upper:]' '[:lower:]' | tr '-' '_'
        }

        while IFS= read -r line; do
            # Skip empty/comment lines
            [[ -z "$$line" || "$$line" == \\#* ]] && continue

            # Extract package name (no version, extras, etc)
            pkg=$$(echo "$$line" | sed -E 's/^\\s*([a-zA-Z0-9_.\\-]+).*$$/\\1/')
            norm_pkg=$$(normalize_name "$$pkg")
            echo "Installing $$pkg..."

            # Install just this package into temp dir
            python3 -m pip install --target "$$TEMP_DIR" --no-deps --no-cache-dir "$$line"

            # Create destination folder
            PKG_OUT_DIR="$$OUTPUT_DIR/$$norm_pkg"
            mkdir -p "$$PKG_OUT_DIR"

            # Move all contents of temp dir into this subfolder
            shopt -s dotglob  # include hidden files
            mv "$$TEMP_DIR"/* "$$PKG_OUT_DIR/" || true

            # Clean temp dir for next round
            rm -rf "$$TEMP_DIR"/*
        done < "$$REQUIREMENTS_FILE"


        # Clean up temporary directory
        rm -rf "$$TEMP_DIR"

        # Create tar archive of the prebundled packages
        tar -cf "$@" -C . "$$OUTPUT_DIR"

        echo "Prebundling complete - packages archived to $@"
    """,
    visibility = ["//visibility:public"],
)

# Extension configuration and data files
filegroup(
    name = "zmq_bridge_examples_config",
    srcs = glob([
        "config/*.toml",
        "data/**/*",
        "docs/**/*",
        "assets/**/*",
        "*.lua",
    ]),
    visibility = ["//visibility:public"],
)


# Python examples and core libraries
py_library(
    name = "zmq_bridge_examples_python",
    srcs = glob([
        "isaac_zmq_bridge/**/*.py",
    ]) + [
        # ":copy_client_stream_message_py_proto",
        # ":prebundle_pip_packages",
    ],
    deps = [
        "//:client_stream_message_py_proto",
        "//:server_control_message_py_proto",
        # "//exts/isaacsim.zmq.bridge:zmq_bridge_python",
        # "@pip//pyzmq",
        # "@pip//numpy",
        # "@pip//opencv-python",
    ],
    data = [
        ":zmq_bridge_examples_config",
    ],
    visibility = ["//visibility:public"],
)

# Headless example binary
py_binary(
    name = "example_headless",
    srcs = ["isaac_zmq_bridge/example_headless.py"],
    deps = [":zmq_bridge_examples_python"],
    main = "isaac_zmq_bridge/example_headless.py",
    visibility = ["//visibility:public"],
)


# # Pre-bundled pip dependencies (if they exist)
# filegroup(
#     name = "zmq_bridge_examples_pip_bundle",
#     srcs = glob([
#         "pip_prebundle/**/*",
#     ]),
#     visibility = ["//visibility:public"],
# )

# Complete examples extension package
filegroup(
    name = "zmq_bridge_examples_extension",
    srcs = [
        ":zmq_bridge_examples_python",
        ":zmq_bridge_examples_config",
    ],
    visibility = ["//visibility:public"],
)
